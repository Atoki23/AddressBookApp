apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: addressbook-app-ingress
  namespace: gateway
  annotations:
    # Make the ALB internet-facing
    alb.ingress.kubernetes.io/scheme: internet-facing

    # Use SSL certificates for HTTPS
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-west-2:999568710647:certificate/e9822346-ba84-4860-b6b0-fdabd5a22827

    # HTTPS listener configuration for ALB
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS": 443}]'

    # ALB should target IP addresses
    alb.ingress.kubernetes.io/target-type: ip

    # Health check configurations
    alb.ingress.kubernetes.io/healthcheck-port: "8080"
    alb.ingress.kubernetes.io/healthcheck-path: /actuator/health # Assuming your Spring Boot app has an Actuator health endpoint
    alb.ingress.kubernetes.io/success-codes: "200"

    # Load balancer settings and redirect to HTTPS
    alb.ingress.kubernetes.io/load-balancer-name: addressbook-app
    alb.ingress.kubernetes.io/target-group-attributes: deregistration_delay.timeout_seconds=30
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type":"redirect","RedirectConfig":{"Protocol":"HTTPS","Port":"443","StatusCode":"HTTP_301"}}'
spec:
  ingressClassName: alb # Specifies ALB as the ingress class
  rules:
  - host: address.dominionsystem.org # Custom domain for your app
    http:
      paths:
      - path: / # Root URL path
        pathType: Prefix
        backend:
          service:
            name: addressbook-app-service # Name of the Kubernetes service exposing your app
            port:
              number: 8080 # Port number on which the service is running
  tls:
  - hosts:
    - address.dominionsystem.org # Domain for which the certificate is applied
    secretName: addressbook-app-tls # TLS secret for SSL termination



